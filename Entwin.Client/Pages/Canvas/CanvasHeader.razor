@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@using Entwin.Shared.Models
@using System.Net.Http.Json

@inject LoginModalService LoginModalService
@inject AuthService AuthService
@inject Entwin.Client.Services.SimulationState SimulationState
@inject Entwin.Client.Services.CanvasStateService CanvasState
@inject HttpClient Http

<div class="header">
    <div class="d-flex gap-3 align-items-end flex-wrap">
        <div class="form-group" style="max-width: 200px;">
            <label>Duration</label>
            <input type="number"
                   class="form-control"
                   @bind="SimulationState.Duration"
                   @bind:event="oninput" />
        </div>

        <div class="form-group" style="max-width: 200px;">
            <label>Time Step: @SimulationState.TimeStep</label>
            <input type="range"
                   min="1" max="5"
                   step="0.01"
                   @bind="LogSliderValue"
                   @bind:event="oninput" />
        </div>

        <div class="d-flex align-items-center gap-2">
            <button type="submit" class="btn btn-primary" @onclick="Save">Save</button>
            @if (!string.IsNullOrEmpty(status))
            {
                <p class="mb-0">@status</p>
            }
        </div>
    </div>
</div>

@code {
    private double LogSliderValue
    {
        get => Math.Log10(SimulationState.TimeStep) + 4;
        set => SimulationState.TimeStep = Math.Pow(10, value - 4);
    }

    private string status = "";

    private async Task Save()
    {
        try
        {
            await CanvasState.SaveProjectAsync(Http);
            status = "Project saved!";
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"HttpRequestException caught: {ex.Message}");
            if (ex.StatusCode == System.Net.HttpStatusCode.Unauthorized)
            {
                await LoginModalService.ShowLoginAsync(Save);
            }
            else
            {
                status = $"Error: {ex.Message}";
            }
        }
        catch (Exception ex)
        {
            status = $"Error: {ex.Message}";
        }
    }
    
}
